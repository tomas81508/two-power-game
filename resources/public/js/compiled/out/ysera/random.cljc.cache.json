["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$ysera.random","~:imports",null,"~:requires",["^ ","~$ysera.test","^9","~$ysera.collections","^:"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$is=","^9","~$remove-one","^:"],"~:defs",["^ ","~$get-pseudo-random-number",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/tomasekholm/programming/github/two-power-game/resources/public/js/compiled/out/ysera/random.cljc","~:line",5,"~:column",7,"~:end-line",5,"~:end-column",31,"~:arglists",["~#list",["~$quote",["^I",[["~$seed"]]]]]],"^5","~$ysera.random/get-pseudo-random-number","~:variadic",false,"^C","resources/public/js/compiled/out/ysera/random.cljc","^G",31,"~:method-params",["^I",[["^K"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"^D",5,"^F",5,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^J",["^I",[["^K"]]]]]],"~$get-random-int",["^ ","^A",null,"^B",["^ ","^C","/Users/tomasekholm/programming/github/two-power-game/resources/public/js/compiled/out/ysera/random.cljc","^D",12,"^E",7,"^F",12,"^G",21,"^H",["^I",["^J",["^I",[["^K","~$max"]]]]]],"^5","~$ysera.random/get-random-int","^M",false,"^C","resources/public/js/compiled/out/ysera/random.cljc","^G",21,"^N",["^I",[["^K","^T"]]],"^O",null,"^P",["^I",[null,null]],"^E",1,"^D",12,"^F",12,"^Q",2,"^R",true,"^H",["^I",["^J",["^I",[["^K","^T"]]]]]],"~$random-nth",["^ ","^A",null,"^B",["^ ","^C","/Users/tomasekholm/programming/github/two-power-game/resources/public/js/compiled/out/ysera/random.cljc","^D",15,"^E",7,"^F",15,"^G",17,"^H",["^I",["^J",["^I",[["^K","~$coll"]]]]],"~:doc","Returns a random element of the collection. Returns the tuple [state result]."],"^5","~$ysera.random/random-nth","^M",false,"^C","resources/public/js/compiled/out/ysera/random.cljc","^G",17,"^N",["^I",[["^K","^W"]]],"^O",null,"^P",["^I",[null,null]],"^E",1,"^D",15,"^F",15,"^Q",2,"^R",true,"^H",["^I",["^J",["^I",[["^K","^W"]]]]],"^X","Returns a random element of the collection. Returns the tuple [state result].","~:test",true],"~$take-n-random",["^ ","^A",null,"^B",["^ ","^C","/Users/tomasekholm/programming/github/two-power-game/resources/public/js/compiled/out/ysera/random.cljc","^D",28,"^E",7,"^F",28,"^G",20,"^H",["^I",["^J",["^I",[["^K","~$n","^W"]]]]],"^X","Takes (at most) n different random elements from the collection. Returns the tuple [state result].\n If the collection contains less elements than n, all elements will be returned in a random order."],"^5","~$ysera.random/take-n-random","^M",false,"^C","resources/public/js/compiled/out/ysera/random.cljc","^G",20,"^N",["^I",[["^K","~$n","^W"]]],"^O",null,"^P",["^I",[null,null]],"^E",1,"^D",28,"^F",28,"^Q",3,"^R",true,"^H",["^I",["^J",["^I",[["^K","~$n","^W"]]]]],"^X","Takes (at most) n different random elements from the collection. Returns the tuple [state result].\n If the collection contains less elements than n, all elements will be returned in a random order.","^Z",true],"~$shuffle-with-seed",["^ ","^A",null,"^B",["^ ","^C","/Users/tomasekholm/programming/github/two-power-game/resources/public/js/compiled/out/ysera/random.cljc","^D",57,"^E",7,"^F",57,"^G",24,"^H",["^I",["^J",["^I",[["^K","^W"]]]]]],"^5","~$ysera.random/shuffle-with-seed","^M",false,"^C","resources/public/js/compiled/out/ysera/random.cljc","^G",24,"^N",["^I",[["^K","^W"]]],"^O",null,"^P",["^I",[null,null]],"^E",1,"^D",57,"^F",57,"^Q",2,"^R",true,"^H",["^I",["^J",["^I",[["^K","^W"]]]]],"^Z",true]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:else","~:b"]],"~:order",["^17","~:b"]],"^X",null]